const chai = require('../node_modules/chai');
const expect = chai.expect;
const index = require('../index');
const getLinksFromMd = index.getLinksFromMd;

const textWithThreeLinks = 'Lorem ipsum incididunt ut [labore](https://en.wiktionary.org/wiki/labore) et [dolore](https://en.wiktionary.org/wiki/dolore) magna aliqua. Ut aliquip ex ea commodo consequat. [foo](http://foo.com) Duis aute irure dolor.';

const arrayWithThreeObjs = [
  { href: 'https://en.wiktionary.org/wiki/labore', text: 'labore' },
  { href: 'https://en.wiktionary.org/wiki/dolore', text: 'dolore' },
  { href: 'http://foo.com', text: 'foo' }
];

const txtWithOneLink = 'Lorem ipsum enim ad minim veniam, [Uhull super link](uau.super.link). Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';

const arrayWithOneObj = [
  { href: 'uau.super.link', text: 'Uhull super link' }
];

const txtWithTwoLinks = 'Oi você quer entrar no site [google](www.google.com)? ou no [yahoo](www.yahoo.com.br)?';

const arrayWithTwoObjs = [
  { href: 'www.google.com', text: 'google' },
  { href: 'www.yahoo.com.br', text: 'yahoo' }
];

const txtWithNoLink = 'Lorem ipsum Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod teor.';

const anothertxtWithNoLink = 'Tem um []() marcador de link vazio aqui';

const txtWithSpecialChar =  '[Este](https://foo.bar) [é](https://foo.bar) [um](https://foo.bar) [texto](https://foo.bar) [só](https://foo.bar) [de](https://foo.bar) [links](https://foo.bar), [$yay! o*...&^()](https://foo.bar)!';

const arrayWithSpecialChar = [
  { href: 'https://foo.bar', text: 'Este' },
  { href: 'https://foo.bar', text: 'é' },
  { href: 'https://foo.bar', text: 'um' },
  { href: 'https://foo.bar', text: 'texto' },
  { href: 'https://foo.bar', text: 'só' },
  { href: 'https://foo.bar', text: 'de' },
  { href: 'https://foo.bar', text: 'links' },
  { href: 'https://foo.bar', text: '$yay! o*...&^()' }
];

const txtWithQuotes = "Este site é muito ['confiável';)](http://www.google.com)!";

const arrayWithQuotes = [
  { href: 'http://www.google.com', text: '\'confiável\';)' }
];

describe('getLinksFromMd() - Extração de urls de arquivos markdown.', () => {

  describe('Validação: ', () => {
    it('Deve retornar erro quando não houver parâmetro.', () => {
      expect( () =>
        getLinksFromMd()
      ).to.throw('Texto não fornecido');
    });
    it('Deve retornar erro quando a entrada for um número.', () => {
      expect( () =>
        getLinksFromMd(78688)
      ).to.throw('Insira um texto');
    });
  });

  describe('Obtenção de URLs em texto válido:', () => {
    it('Fornecido texto com 3 links. Deve retornar um array com três objetos.', () => {
      expect(
        getLinksFromMd(textWithThreeLinks)
      ).to.deep.equal(arrayWithThreeObjs);
    });
    it('Fornecido texto com 2 links. Deve retornar um array com dois objetos.', () => {
      expect(
        getLinksFromMd(txtWithTwoLinks)
      ).to.deep.equal(arrayWithTwoObjs);
    });
    it('Fornecido texto com 1 link. Deve retornar um array com um objeto.', () => {
      expect(
        getLinksFromMd(txtWithOneLink)
      ).to.deep.equal(arrayWithOneObj);
    });
    it('Fornecido texto sem links. Deve retornar um array vazio.', () => {
      expect(
        getLinksFromMd(txtWithNoLink)
      ).to.be.an('array').that.is.empty;
    });
    it('Fornecido texto com marcação de link vazio. Deve retornar um array vazio.', () => {
      expect(
        getLinksFromMd(anothertxtWithNoLink)
      ).to.be.an('array').that.is.empty;
    });
  });

  describe('Texto dos links com caracteres especiais: ', () => {
    it('Fornecido texto com 8 links, alguns com caracteres especiais. Deve retornar um array com oito objetos.', () => {
      expect(
        getLinksFromMd(txtWithSpecialChar)
      ).to.deep.equal(arrayWithSpecialChar);
    });
    it('Fornecido texto com 1 link e uso de aspas. Deve retornar um array com um objeto.', () => {
      expect(
        getLinksFromMd(txtWithQuotes)
      ).to.deep.equal(arrayWithQuotes);
    });
  });
});
